name: Build and test angular app
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: |
          cd front
          npm install
      - name: Build the stack docker
        run: |
          docker compose --version
          docker compose up -d
      - name: Run e2e tests with cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: front
      - name: Run tests
        run: |
          cd front
          npx jest --coverage

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: npm ci, build and test
        run: |
          cd front
          npm ci
          npm run build --if-present
          npm test
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: front/dist/ynov-ci-groupe/browser

#      - name: Authenticate with npm
#        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
#      - name: build and publish package on NPM
#        run: |
#          cd front
#          git config --global user.email "hugo.gehringer@free.fr"
#          git config --global user.name "Hugo Gehringer"
#          npm run build-npm
#          npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    needs: [build_test]

    steps:
      - name: Deploy main content to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          path: front/dist/ynov-ci-groupe/browser

      - name: Deploy docs to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          path: front/docs
          prefix: docs
